plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.6.0'
    id "com.jfrog.bintray" version "1.8.4"
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

project.group = 'org.clyze'

wrapper {
    gradleVersion = '6.2'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'commons-io:commons-io:2.4'
    api 'com.fasterxml.jackson.core:jackson-databind:2.12.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc.options.addBooleanOption('Xdoclint:all', true)

test {
    useJUnitPlatform()
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

release {
    //use defaults, see https://github.com/researchgate/gradle-release
}

afterReleaseBuild.dependsOn publish

if (project.hasProperty('artifactory_user')) {
    publishing {
        repositories {
            maven {
                credentials {
                    username artifactory_user
                    password artifactory_password
                }
                //Always publish to the public releases repo
                url "${artifactory_contextUrl}/libs-public-release-local"
            }
        }
    }
}

// Upload to bintray with:
//   ./gradlew clean build bintrayUpload --info
// Needs properties: bintray_user, bintray_key.
if (project.hasProperty('bintray_user') && project.hasProperty('bintray_key')) {
    bintray {
        user = bintray_user
        key = bintray_key
        publications = ['mavenJava']
        configurations = ['archives']
        pkg {
            repo = 'plast-lab'
            name = 'metadata-model'
            desc = 'A model of source code metadata for Java (and Java-like) code.'
            licenses = ['MIT']
            labels = ['java']
            vcsUrl = 'https://github.com/clyze/metadata-model.git'
            version {
                name = project.version
                released = new Date()
                vcsTag = project.version
            }
        }
    }
}
