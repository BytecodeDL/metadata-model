package org.clyze.persistent.metadata.jvm;

import java.util.*;
import org.clyze.persistent.model.StringConstant;
import org.clyze.persistent.model.SymbolWithId;
import org.clyze.persistent.model.Usage;
import org.clyze.persistent.model.jvm.*;

/**
 * A class providing a common container of basic Doop metadata.
 *
 * The metadata is generated by processing some form of a
 * syntactic representation (e.g. Java source file, Jimple IR).
 */
public class JvmMetadata {
    public final Set<JvmClass> jvmClasses = new HashSet<>();
    public final Set<JvmField> jvmFields = new HashSet<>();
    public final Set<JvmMethod> jvmMethods = new HashSet<>();
    public final Set<JvmVariable> jvmVariables = new HashSet<>();
    public final Set<JvmMethodInvocation> jvmInvocations = new HashSet<>();
    public final Set<JvmHeapAllocation> jvmHeapAllocations = new HashSet<>();
    public final Set<Usage> usages = new HashSet<>();
    public final Set<StringConstant> stringConstants = new HashSet<>();

    /**
     * Return a metadata collection sorted by id, to make output canonical.
     * @param set    the collection of elements (that have Doop ids)
     * @param <T>    the actual type of the set elements
     * @return       the sorted output list
     */
    public static <T extends SymbolWithId> List<T> getSortedByDoopId(Set<T> set) {
        List<T> ret = new ArrayList<>(set);
        ret.sort(Comparator.comparing(SymbolWithId::getSymbolId));
        return ret;
    }
}
